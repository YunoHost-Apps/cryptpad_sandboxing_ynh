set $main_domain "__CRYPTPAD_DOMAIN__";
set $sandbox_domain "__DOMAIN__";
set $allowed_origins "*";
set $api_domain "__CRYPTPAD_DOMAIN__";
set $files_domain "__CRYPTPAD_DOMAIN__";

more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; always";
more_set_headers "X-XSS-Protection: 1; mode=block";
more_set_headers "X-Content-Type-Options: nosniff";
more_set_headers "Access-Control-Allow-Origin: ${allowed_origins}";
#more_set_headers "X-Frame-Options: 'SAMEORIGIN'";
more_set_headers "Cross-Origin-Resource-Policy: cross-origin";
more_set_headers "Cross-Origin-Embedder-Policy: require-corp";

# any static assets loaded with "ver=" in their URL will be cached for a year
if ($args ~ ver=) {
    set $cacheControl max-age=31536000;
}
if ($uri ~ ^/.*(\/|\.html)$) {
    set $cacheControl no-cache;
}
# Will not set any header if it is emptystring
more_set_headers "Cache-Control: $cacheControl";

set $styleSrc   "'unsafe-inline' 'self' https://${main_domain}";
set $connectSrc "'self' https://${main_domain} blob: wss://${main_domain} https://${sandbox_domain}";
set $fontSrc    "'self' data: https://${main_domain}";
set $imgSrc     "'self' data: blob: https://${main_domain}";
set $frameSrc   "'self' https://${sandbox_domain} blob:";
set $mediaSrc   "blob:";
set $childSrc   "https://${main_domain}";
set $workerSrc  "'self'";
set $scriptSrc  "'self' resource: https://${main_domain}";
set $frameAncestors "'self' https://${main_domain}";

set $unsafe 0;
if ($uri ~ ^\/(sheet|doc|presentation)\/inner.html.*$) { set $unsafe 1; }
if ($uri ~ ^\/common\/onlyoffice\/.*\/.*\.html.*$) { set $unsafe 1; }
if ($host != $sandbox_domain) { set $unsafe 0; }
if ($uri ~ ^\/unsafeiframe\/inner\.html.*$) { set $unsafe 1; }
if ($unsafe) {
    set $scriptSrc "'self' 'unsafe-eval' 'unsafe-inline' resource: https://${main_domain}";
}

more_set_headers "Content-Security-Policy: default-src 'none'; child-src $childSrc; worker-src $workerSrc; media-src $mediaSrc; style-src $styleSrc; script-src $scriptSrc; connect-src $connectSrc; font-src $fontSrc; img-src $imgSrc; frame-src $frameSrc; frame-ancestors $frameAncestors";

location ^~ / {
    proxy_pass http://127.0.0.1:__PORTI__;
    proxy_redirect    off;
    proxy_set_header  Host $host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host $server_name;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
}

location ^~ /cryptpad_websocket {
    proxy_pass http://127.0.0.1:__PORTI__;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # WebSocket support (nginx 1.4)
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection upgrade;
}

#location ^~ /customize.dist/ {
#    # This is needed in order to prevent infinite recursion between /customize/ and the root
#}

#location ^~ /customize/ {
#    rewrite ^/customize/(.*)$ $1 break;
#    try_files /customize/$uri /customize.dist/$uri;
#}

location ~ ^/api/.*$ {
    proxy_pass http://127.0.0.1:__PORTI__;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # These settings prevent both NGINX and the API server
    # from setting the same headers and creating duplicates
    proxy_hide_header Cross-Origin-Resource-Policy;
    more_set_headers "Cross-Origin-Resource-Policy: cross-origin";
    proxy_hide_header Cross-Origin-Embedder-Policy;
    more_set_headers "Cross-Origin-Embedder-Policy: require-corp";
}

location ^~ /blob/ {
    if ($request_method = 'OPTIONS') {
        more_set_headers "Access-Control-Allow-Origin: ${allowed_origins}";
        more_set_headers "Access-Control-Allow-Methods: GET, POST, OPTIONS";
        more_set_headers "Access-Control-Allow-Headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range";
        more_set_headers "Access-Control-Max-Age: 1728000";
        more_set_headers "Content-Type: application/octet-stream; charset=utf-8";
        more_set_headers "Content-Length: 0";
        return 204;
    }
    more_set_headers "X-Content-Type-Options: nosniff";
    more_set_headers "Cache-Control: max-age=31536000";
    more_set_headers "Access-Control-Allow-Origin: ${allowed_origins}";
    more_set_headers "Access-Control-Allow-Methods: GET, POST, OPTIONS";
    more_set_headers "Access-Control-Allow-Headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Content-Length";
    more_set_headers "Access-Control-Expose-Headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Content-Length";
    try_files $uri =404;
}

location ^~ /block/ {
    more_set_headers "X-Content-Type-Options: nosniff";
    more_set_headers "Cache-Control: max-age=0";
    try_files $uri =404;
}

location ~ ^/(register|login|settings|user|pad|drive|poll|slide|code|whiteboard|file|media|profile|contacts|todo|filepicker|debug|kanban|sheet|support|admin|notifications|teams|calendar|presentation|doc|form|report|convert|checkup)$ {
    rewrite ^(.*)$ $1/ redirect;
}
